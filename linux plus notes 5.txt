Chapter 11. File Security
=========================

What is a file?
---------------

 - In Linux, everything is a file

Regular file
 - Binary or text, saved on a storage device, and can be read and written to.
 - Metadata
	- Ownership
	- Access control
	- File size
	- Creation date
	- Metadata is data that describes other data, the contents of the file

Directory file
 - Lists files
 - Associates data with files names
 - The directory associates data blocks with file names

Device drivers - drivers that connect applications to physical hardware
 - In Linux, everything is a file including printers.
 - The printer device is a file.
 - You can save data to it using the same tools that we use to save data to a regular file.
 - When that data is saved to a printer file, it's sent to the printer.
 - A printer is a kind of Character Device File

Block Device File
 - A physical device that appears as a file
 - A storage device such as a solid state disk

Character Device File
 - Unique because they can be virtual, in that they might not represent a real physical device.
 - We have a character device file called Zero that when read gives us an endless supply of zeros.
	/dev/zero = 0000000000000...
	/dev/null = text that we don't want to keep
		swallows everything that is written to it
		this is useful when you don't want the output of a command to show on the screen
 - Our screen is a character device file as well.

Network Socket File
 - Network sockets are also files.
 - Writing data to a network socket can send it across the network.
 - They may also be used to send data between programs on a local computer.

Virtual Files
 - Files that don't really exist anywhere and have no size, but you can still read and write to them
	/proc/cpuinfo
		Shows info about the CPU, has data in it, but has a size of zero bytes because the OS creates
		 the data instantly when it's being read

 - Even the output of an application is considered a file that has not been saved yet

Pipe File
 - A physical tube, or pipe, from one application to another.

What is the advantage of all of this, considering other operating systems don't operate this way?
 - The idea of everything being a file allows us to view important system information and write data to physical devices with simple tools.
 - It allows us to read block devices and the output of commands using simple text viewers.
 - It allows us to have one command communication with another without any special software, which allows us to combine multiple simple commands to solve complex problem.
 - The concept of everything being a file sets Linux apart from other operating systems and proves to be very powerful.

==========

Get information about files
---------------------------

Metadata
 - Data that describes other data is called metadata
 - File name
 - File size
 - Permissions
 - Ownership
 - Access time
 - And more

 - The quickest way to get information about a file is by doing a long list of the file

ls -l /etc/passwd

Long List of a File

-rw-r--r--. 1 root root 2750 Feb 9 23:07 /etc/passwd

-		rw-				r--				r--.
File type	User owner's permissions	Group owner's permissions	Permissions for other	

1				root 		root 		2750
Number of inodes the file uses	User owner	Group owner	Size of the file in bytes

Feb 9 23:07			/etc/passwd
Last modified date and time	Name of the file

 - First column is the file type
	- means regular data file

Linux File Types
Character	Type
-		Regular File
b		Block Device
c		Character Device
d		Directory
l		Symbolic Link
n		Network File
p		FIFO (pipe)
s		Socket

 - The next three characters are the user owner's permissions
	rw-

r = read
w = write
x = execute

 - Inodes, or index nodes, stores the metadata about the file, as well as a pointer to the location of the data blocks on the disk.
 - The inode of a file does not contain the name.  The file's name is not stores in the file's inode.  We need a directory inode for that.
 - Directory data is stored in directory inodes.

 - In Linux, a file name is only hidden if the first character of its name is a dot.

ls -la
	List hidden files (l = long list, a = all)

file /etc/passwd
	List the tile type
	ie. ASCII text
	The file command looks at the bits of the file to determine which type it is.

stat /etc/passwd
	Another command to show file info

Stat of a file
File: /etc/passwd
Size: 2750	Blocks: 8	IO Blocks: 4096		regular file
Device: fd00h/64768d	Inode: 2101122	Links: 1
	Size in bytes
	Number of file system blocks
	Size of the IO block = size in bytes of every block
	Type of file
	Device number
	Inode number
	Number of hard links
	Permissions
	ID number of the user owner
	ID number of the group owner
	SELinux security context

 - Each drive uses the same number for inodes, so two files on two drives can have the same inode number.
 - However, the device number in combination with the inode number makes a unique address.
 - Stat also shows (last) access, modify, and change dates.
	modify = content modified
	change = last time and attribute or content was modified
		ie. metadata would update if we changed ownership or permissions, but the file data is not changed
 - Birth = creation file.  This last item came from UNIX, and is not supported on Linux.

==========

Extended Attributes
 - Require support by the OS
 - Extensions to file
 - Stored with files on disk
 - Three major types of extended attributes
	- Extended system attributes
	- Extended security attributes
	- Extended user attributes

